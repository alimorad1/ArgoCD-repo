🎉 پیاده‌سازی Kafka روی Kubernetes بدون Zookeeper 🚀

سلام دوستان! خواستم تجربه‌ی جالبی که از پیاده‌سازی Kafka روی Kubernetes داشتم رو با شما به اشتراک بذارم.

📌 کافکا اصلاً برای چی خوبه؟
کافکا یه سیستم توزیع‌شده‌ست که برای پردازش داده‌های real-time و ارسال پیام بین اپلیکیشن‌ها استفاده میشه. به عبارت ساده‌تر، با کافکا می‌تونید داده‌های خودتون رو به راحتی از یک سیستم به سیستم دیگه منتقل کنید. خیلی برای میکروسرویس‌ها و سیستم‌های مقیاس‌پذیر مفیده!

📌 چرا Kraft؟
خب، من همیشه با Zookeeper مشکل داشتم! بخاطر همین، وقتی تصمیم گرفتم Kafka رو راه‌اندازی کنم، Kraft رو انتخاب کردم. Kraft (یا KRaft mode) این مزیت رو داره که دیگه به Zookeeper نیازی نیست و خودش به طور خودکار همه چیز رو مدیریت می‌کنه. این خیلی کمک کرد تا کارها ساده‌تر بشه!

📌 StatefulSet بودن؟
کافکا یه سرویس stateful هست، یعنی داده‌ها باید حفظ بشن و در صورتی که پادهای کافکا ریستارت بشن، اطلاعات پاک نشه. به همین دلیل از StatefulSet استفاده کردم تا مطمئن بشم هر پاد به داده‌های خودش دسترسی داره.

📌 مراحل پیاده‌سازی:

    از Helm استفاده کردم تا چارت Kafka رو نصب کنم.

    تنظیمات مخصوص KRaft رو در فایل values.yaml وارد کردم.

    برای دسترسی از بیرون، سرویس‌ها رو با استفاده از NodePort در دسترس قرار دادم.

    برای چک کردن درست بودن کارکرد، با استفاده از kafka-console-consumer و kafka-console-producer تست کردم و یک topic به اسم "corporate" ایجاد کردم.

    البته چالش‌هایی هم پیش اومد! مثلاً با پورت‌ها و NodePort یه سری مشکلات داشتم که بعداً تونستم رفعشون کنم. تجربه خوبی بود که به کمکش یاد گرفتم چطور مشکلات رو سریعتر پیدا و حل کنم.

📌 نتیجه‌گیری:
در نهایت، خوشحالم که تونستم Kafka رو با استفاده از KRaft بدون Zookeeper راه‌اندازی کنم. این کار باعث شد که تنظیمات خیلی ساده‌تر بشه و سیستم پایدارتر بشه. حالا می‌تونم از Kafka برای پروژه‌های بزرگ استفاده کنم و خیالم راحت باشه!

خوشحال می‌شم اگر شما هم تجربه‌ای مشابه داشتید یا سوالی دارید، با من به اشتراک بذارید! 😊

#DevOps #Kafka #Kubernetes #Helm #KRaft #TechCommunity #Microservices
